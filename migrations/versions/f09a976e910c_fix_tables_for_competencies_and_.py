"""Fix tables for competencies and indicators

Revision ID: f09a976e910c
Revises: e445154f693d
Create Date: 2025-04-13 22:42:09.312862

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f09a976e910c'
down_revision: Union[str, None] = 'e445154f693d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.drop_table('discipline_block_competency_codes')
    op.drop_constraint('indicators_competency_code_id_fkey', 'indicators', type_='foreignkey')
    op.drop_column('indicators', 'competency_code_id')
    op.drop_table('competency_codes')

    op.create_table('competency_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.add_column('competencies', sa.Column('code', sa.String(length=10), nullable=False))
    op.add_column('competencies', sa.Column('competency_group_id', sa.Integer(), nullable=False))
    op.alter_column('competencies', 'name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.create_foreign_key(None, 'competencies', 'competency_groups', ['competency_group_id'], ['id'])

    op.add_column('indicators', sa.Column('code', sa.String(length=10), nullable=False))
    op.add_column('indicators', sa.Column('competency_id', sa.Integer(), nullable=False))
    op.alter_column('indicators', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.drop_constraint('indicators_name_key', 'indicators', type_='unique')
    op.create_foreign_key(None, 'indicators', 'competencies', ['competency_id'], ['id'])

    
    op.create_table('discipline_block_competencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discipline_block_id', sa.Integer(), nullable=False),
    sa.Column('competency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['discipline_block_id'], ['discipline_blocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('indicators', sa.Column('competency_code_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'indicators', type_='foreignkey')
    op.create_foreign_key('indicators_competency_code_id_fkey', 'indicators', 'competency_codes', ['competency_code_id'], ['id'])
    op.create_unique_constraint('indicators_name_key', 'indicators', ['name'])
    op.alter_column('indicators', 'name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('indicators', 'competency_id')
    op.drop_column('indicators', 'code')
    op.drop_constraint(None, 'competencies', type_='foreignkey')
    op.alter_column('competencies', 'name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_column('competencies', 'competency_group_id')
    op.drop_column('competencies', 'code')
    op.create_table('competency_codes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('competency_codes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('competency_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competencies.id'], name='competency_codes_competency_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='competency_codes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('discipline_block_competency_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('discipline_block_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('competency_code_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_code_id'], ['competency_codes.id'], name='discipline_block_competency_codes_competency_code_id_fkey'),
    sa.ForeignKeyConstraint(['discipline_block_id'], ['discipline_blocks.id'], name='discipline_block_competency_codes_discipline_block_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='discipline_block_competency_codes_pkey')
    )
    op.drop_table('discipline_block_competencies')
    op.drop_table('competency_groups')
    # ### end Alembic commands ###
