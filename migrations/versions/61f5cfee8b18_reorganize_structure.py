"""Reorganize structure

Revision ID: 61f5cfee8b18
Revises: 03e2b810b27c
Create Date: 2025-03-27 08:40:38.213578

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '61f5cfee8b18'
down_revision: Union[str, None] = '03e2b810b27c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('disciplines', sa.Column('short_name', sa.String(length=50), nullable=False))
    op.create_unique_constraint(None, 'disciplines', ['short_name'])

    op.drop_constraint('discipline_blocks_educational_type_id_fkey', 'discipline_blocks', type_='foreignkey')
    op.drop_column('discipline_blocks', 'educational_type_id')
    op.drop_table('educational_types')

    op.drop_constraint('discipline_blocks_assessment_type_id_fkey', 'discipline_blocks', type_='foreignkey')
    op.drop_column('discipline_blocks', 'assessment_type_id')
    op.drop_table('assessment_types')

    op.create_table(
        'control_types',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=30), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.add_column('discipline_blocks', sa.Column('control_type_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'discipline_blocks', 'control_types', ['control_type_id'], ['id'])

    op.create_table(
        'educational_levels',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.create_table(
        'educational_forms',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.create_table(
        'directions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('educational_level_id', sa.Integer(), nullable=False),
        sa.Column('educational_form_id', sa.Integer(), nullable=False),
        sa.Column('semester_count', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['educational_form_id'], ['educational_forms.id'], ),
        sa.ForeignKeyConstraint(['educational_level_id'], ['educational_levels.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.drop_constraint('competency_codes_additional_competency_id_fkey', 'competency_codes', type_='foreignkey')
    op.drop_column('competency_codes', 'additional_competency_id')
    op.add_column('competency_codes', sa.Column('competency_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'competency_codes', 'competencies', ['competency_id'], ['id'])

    op.drop_table('competency_indicators')
    op.create_table(
        'indicators',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('competency_code_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['competency_code_id'], ['competency_codes.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.add_column('discipline_blocks', sa.Column('direction_id', sa.Integer(), nullable=False))

    op.create_foreign_key(None, 'discipline_blocks', 'directions', ['direction_id'], ['id'])
    op.drop_column('discipline_blocks', 'has_coursework')
    op.drop_column('discipline_blocks', 'has_project')

    op.drop_table('discipline_block_competencies')
    op.create_table(
        'discipline_block_competency_codes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('discipline_block_id', sa.Integer(), nullable=False),
        sa.Column('competency_code_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['competency_code_id'], ['competency_codes.id'], ),
        sa.ForeignKeyConstraint(['discipline_block_id'], ['discipline_blocks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'disciplines', type_='unique')
    op.drop_column('disciplines', 'short_name')
    op.add_column('discipline_blocks', sa.Column('has_project', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('discipline_blocks', sa.Column('educational_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('discipline_blocks', sa.Column('assessment_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('discipline_blocks', sa.Column('has_coursework', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'discipline_blocks', type_='foreignkey')
    op.drop_constraint(None, 'discipline_blocks', type_='foreignkey')
    op.create_foreign_key('discipline_blocks_educational_type_id_fkey', 'discipline_blocks', 'educational_types', ['educational_type_id'], ['id'])
    op.create_foreign_key('discipline_blocks_assessment_type_id_fkey', 'discipline_blocks', 'assessment_types', ['assessment_type_id'], ['id'])
    op.drop_column('discipline_blocks', 'direction_id')
    op.drop_column('discipline_blocks', 'control_type_id')
    op.add_column('competency_codes', sa.Column('additional_competency_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'competency_codes', type_='foreignkey')
    op.create_foreign_key('competency_codes_additional_competency_id_fkey', 'competency_codes', 'competencies', ['additional_competency_id'], ['id'])
    op.drop_column('competency_codes', 'competency_id')
    op.create_table('assessment_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('assessment_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='assessment_types_pkey'),
    sa.UniqueConstraint('name', name='assessment_types_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('discipline_block_competencies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('competency_code_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('discipline_block_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_code_id'], ['competency_codes.id'], name='discipline_block_competencies_competency_code_id_fkey'),
    sa.ForeignKeyConstraint(['discipline_block_id'], ['discipline_blocks.id'], name='discipline_block_competencies_discipline_block_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='discipline_block_competencies_pkey')
    )
    op.create_table('educational_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('semester_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='educational_types_pkey'),
    sa.UniqueConstraint('name', name='educational_types_name_key')
    )
    op.create_table('competency_indicators',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('competency_code_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_code_id'], ['competency_codes.id'], name='competency_indicators_competency_code_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='competency_indicators_pkey'),
    sa.UniqueConstraint('name', name='competency_indicators_name_key')
    )
    op.drop_table('discipline_block_competency_codes')
    op.drop_table('indicators')
    op.drop_table('directions')
    op.drop_table('educational_levels')
    op.drop_table('educational_forms')
    op.drop_table('control_types')
    # ### end Alembic commands ###
